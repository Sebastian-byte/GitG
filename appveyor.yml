version: '{build}'
skip_tags: true # Avoid loops 

build:
  parallel: true # Compile in parallel

image:
  - Visual Studio 2019 # Compile for Windows & GNU/Linux 
  - Ubuntu

stack: python 3.8 # Use Python 3.8.6

environment:
  matrix:
    - ARCH: i686 # Generate executables to 32 & 64 bit
      PYTHON: "C:\\Python39" # Define Python directory (Only Windows)
      PYTHON_VERSION: "3.9.2"
      PYTHON_ARCH: "32" # Define Python arch
      platform: "x86" # Define friendly arch

    - ARCH: amd64
      PYTHON: "C:\\Python39-x64"
      PYTHON_VERSION: "3.9.2"
      PYTHON_ARCH: "64"
      platform: "x64"

init:
  - ps: "Write-Output Python-Path: $env:PYTHON Python-Version: $env:PYTHON_VERSION Python-Arch: x$env:PYTHON_ARCH Computer-Arch: $env:platform Appveyor-Arch: $env:ARCH"

install:
  - cmd: "SET PATH=%PYTHON%\\Scripts;%PYTHON%;%PATH%" # Add Python to the path
  - sh: "export PATH=$PATH:/%PYTHON%" # If is compiled for Linux
  - sh: "export PATH=$PATH:/%PYTHON%/Scripts"
  - pip install -r requirements.txt # Install Requirements

build_script:
  - mkdir build
  - cd build
  - "pyinstaller --onefile --distpath ./GitG/dist --workpath ./GitG/build ../GitG.py" # Compile GitG & GitGSave
  - "pyinstaller --onefile --distpath ./GitGSave/dist --workpath ./GitGSave/build ../GitGSave.py" # Save it to different directories

test_script:
  - cd GitG/dist
    #- cmd: "xcopy ..\\..\\..\\src\\* .\\src /e /i" # Copy dependencies
    #- sh: mkdir src
    #- sh: "cp -rv ../../../src/* ./src"
  - cmd: "GitG.exe --version" # Check if is properly builded
  - sh: "./GitG --version" # Same but for GNU/Linux
  - cd ../../GitGSave/dist
    #- cmd: "xcopy ..\\..\\..\\src\\* .\\src /e /i"
    #- sh: mkdir src
    #- sh: "cp -rv ../../../src/* ./src"
  - cmd: "GitGSave.exe --version" # Check if Save variant is properly builded
  - sh: "./GitGSave --version" # Same but for GNU/Linux
  - cd ../../..
  - ps: >-
      If ($env:APPVEYOR_REPO_BRANCH -Match "dev")
      {
        $env:releasetype="true"
      } Else {
        $env:releasetype="false"
      }

artifacts:
- path: ./build/GitG/dist
  name: GitG-$(APPVEYOR_BUILD_WORKER_IMAGE)-$(platform)

- path: ./build/GitGSave/dist
  name: GitGSave-$(APPVEYOR_BUILD_WORKER_IMAGE)-$(platform)

deploy:
  release: GitG-v0.9-$(APPVEYOR_BUILD_VERSION)-$(APPVEYOR_REPO_BRANCH)
  description: 'Autogenerated build by AppVeyor.'
  provider: GitHub
  auth_token:
    secure: cZPQOqmIIQmwGKBZm6h3h/m85lWjzdtK7Ad8vDtV9x6Dp5GRVeVJL2tn6YwyKRjY
  artifacts: GitG-$(APPVEYOR_BUILD_WORKER_IMAGE)-$(platform), GitGSave-$(APPVEYOR_BUILD_WORKER_IMAGE)-$(platform)
  draft: false
  prerelease: $(releasetype)
